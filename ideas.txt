Demons of Dex
A roguelike for the unexpanded VIC-20

*** SPOILERS AHEAD!! DON'T READ IF YOU ARE GOING TO PLAY THIS GAME ***

Plot:
Player is a druid. To become a grandmaster of his circle, he must defeat three demons in Dungeon Dex.

TODO:
- fix player/stairs placement so that stairs are always at least X cells away
- RNG is terrible, same levels can repeat during a play session (only 256 different levels)

optimization ideas:
- self-modifying to save loop registers

levels:
- dungeon with 18 levels
- special demon levels at levels 6, 12 and 18
- stairway does not appear before demon is defeated
- special level themes: lava, water, ???
- special items (weapons, etc.) are useful for defeating demons, hidden in levels

level generation:
- start with a level filled with walls
- random walker carves tunnels, turns at map edges

tiles:
	- FLOOR
	- WALL
	- DOOR			; reveals next area, when opened, door is removed from the map
	- SECRET_DOOR	; wall that can be walked through by player
	- WATER			; only player can traverse water (only player can remember contents of cell)
	- LAVA			; deals damage
	- STAIRS		; descend to level below, one way (no going back to previous level)
	- CHEST			; a chest contains a random item but may be trapped
	- ARMOR			; brown = leather, green = cloak, grey = plate mail, blue = magic armor
	- WEAPON		; dagger, sword, axe 
	- ACCESSORY		; rings, amulets

monsters:
- no per-instance data structures, state of object is coded into screen ram
- monsters have no health! random chance of killing (affected by per-type armor rating)
- monster variations: green orc, grey orc?
- wounded monsters can be visualized with red color
- monster ai: fullscreen pass that updates screen ram
- monster types:
	- BAT: red 'b'
	- RAT: red 'r'
	- SNAKE: green 's'  poisons
	- ORC: green 'o'
	- UNDEAD: white 'z'
	- STALKER: white ' ', invisible except for void
	- SLIME: green 'S' slimes don't move, they spread to adjacent cells
	- WIZARD: purple '@' wizards can teleport and shoot lightning bolts
	- DEMON: yellow 'X' demons are immune to normal weapons
	- DRAGON: red 'D'

- monster flags:
	- MF_TOUGH			= 1	; when a hit would kill the monster, it is wounded instead (turns red)
	- MF_DROP_SCROLL	= 2
	- MF_DROP_POTION	= 4
	- MF_DROP_GOLD		= 8
	- MF_DROP_GEM		= 16
	- MF_DROP_ARMOR		= 32
	- MF_DROP_WEAPON	= 64
	- MF_UNUSED			= 128
- monster stats (stored by type, not per instance):
	- char name[8]
	- byte damage		; how much damage the monster deals
	- byte armor		; how difficult it is to kill the monster
	- byte speed		; how often monster is updated (every nth update)
	- byte flags		; misc flags (special abilities)

items:
- scrolls & potions: effect is determined by color ram
- items are picked up by walking over them (message "Found potion.")
- gem: reveals level map when picked up
- gold: increases score when picked up
- magic weapon: needed to fight demons
- magic armor: increases defence
- ankh/amulet ??
- usable items:
	- POTION (f1): heals
	- SKULL (f3): destroys all visible creatures (screen shake & sound)
	- SCROLL (f5): magic missile? invisibility?
	- KEY (f7): opens locked door

status bar:
- displayed at the bottom of the screen:
	HHHHHH P1 S1 S1 K1 ABC
	(H=hearts/half-hearts, P=potions, S=skulls, S=scrolls, K=keys, A=magic weapon, B=magic armor, C=ankh)

animated tiles (update char ram):
- room for 64 characters (including alphabets,numbers,commas etc.), takes 512 bytes at end of ram
- gold twinkle
- water/lava vertical scrolling
- monster animation by mirroring char data (how to efficiently do bit reverse?)
- targetting: update character dynamically (inverse of character below cursor)
